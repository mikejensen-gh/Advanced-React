# the schema defines what data is available to the client

# import * from './generated/prisma.graphql'

# imports are not native to graphql, but prisma has added import functionality. imports are written in comments, and let us access everything from prisma.graphql, so we don't have to rewrite stuff 1:1 (e.g. for returning the Item type below)

type SuccessMessage {
  message: String
}

type Mutation {
  # TODO: how to update images for items
  createItem(title: String, description: String, price: Int, image: String, largeImage: String): Item!
  deleteItem(id: ID!): Item
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
  requestReset(email: String!): SuccessMessage
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  signup(email: String!, password: String!, name: String!): User!
  updateItem(id: ID!, title: String, description: String, price: Int): Item!
  updatePermissions(permissions: [Permission], userId: ID!): User
  addToCart(id: ID!): CartItem
  removeFromCart(id: ID!): CartItem
  createOrder(token: String!): Order!
}

type Query {
  item(where: ItemWhereUniqueInput!): Item
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first: Int): [Item]!
  itemsConnection(where: ItemWhereInput): ItemConnection!
  me: User
  users: [User]!
  order(id: ID!): Order
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  cart: [CartItem!]!
}
